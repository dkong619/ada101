/*----------------------------------------------------------------------------
Merge sort
----------------------------------------------------------------------------*/

import java.util.*;

public class merge {
    void mergeSort(int a[], int beg, int mid, int end) {
        int i, j, k;
        int n1 = mid - beg + 1;
        int n2 = end - mid;
        int LeftArray[] = new int[n1];
        int RightArray[] = new int[n2];
        for (i = 0; i < n1; i++)
            LeftArray[i] = a[beg + i];
        for (j = 0; j < n2; j++)
            RightArray[j] = a[mid + 1 + j];
        i = 0;
        j = 0;
        k = beg;
        while (i < n1 && j < n2) {
            if (LeftArray[i] <= RightArray[j]) {
                a[k] = LeftArray[i];
                i++;
            } else {
                a[k] = RightArray[j];
                j++;
            }
            k++;
        }
        while (i < n1) {
            a[k] = LeftArray[i];
            i++;
            k++;
        }

        while (j < n2) {
            a[k] = RightArray[j];
            j++;
            k++;
        }
    }

    void sort(int a[], int beg, int end) {
        if (beg < end) {
            int mid = (beg + end) / 2;
            sort(a, beg, mid);
            sort(a, mid + 1, end);
            mergeSort(a, beg, mid, end);
        }
    }

    void print(int a[], int n) {
        int i;
        for (i = 0; i < n; i++)
            System.out.print(a[i] + " ");
    }

    public static void main(String args[]) {

        Scanner sc = new Scanner(System.in);
        System.out.println("enter the array size");
        int n = sc.nextInt();
        int arr[] = new int[n];

        System.out.println("enter the array elements: ");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        merge m1 = new merge();
        System.out.println("\nBefore sorting array elements are - ");
        m1.print(arr, n);
        m1.sort(arr, 0, n - 1);
        System.out.println("\nAfter sorting array elements are - ");
        m1.print(arr, n);
        System.out.println("");
        sc.close();
    }

}
